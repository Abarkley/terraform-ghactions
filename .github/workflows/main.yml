# This is a basic workflow to help you get started with Actions

name: Terrform gh actions demo

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # This workflow uses a Azure Serice Principle ro access Aure resources
    # az login
    # az ad sp create-for-rbac -n "TerraformServicePrinciple" --role contributor --scopes /subscriptions/<subscriptionId>
    #to get values below and used as secrets 
    #(https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md)
    env:
      ARM_SUBSCRIPTION_ID: '0cc21a27-18b7-48cb-a6be-d0076bc80bb4'
      ARM_TENANT_ID: 'ac7c944a-5e83-43cc-944a-a34e04dc721a'
      ARM_CLIENT_ID: 'c0a6492c-b52a-4ed2-ab5a-7c9a81c7a959'
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      AZURE_STORAGE: 'TerraformStorage56'
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    
     # From market place. 
     # Must place above builds so AZ cli can be authenticated before builds are ran
      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
             

      # Runs a single command using the runners shell
      # chmod +x makes .sh an executable on build machine. Bootstrapping terraform script
      - name: Build Terraform script
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{ env.AZURE_STORAGE }}

      # Adds Terraform to build machine
      # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        
      # starts terrafomr init using the backend config to get terraform state ir partial state  
      - name: Terraform init
        run: terraform init -backend-config="storage_account_name"={{ env.AZURE_STORAGE }}"
      
      # Runs a terrfrom plan against state file and whats already provisioned
      # -out=tfPlan outputs plan to a file named tfplan
      - name: Terraform Plan
        run: terrafrom plan -out=tfPlan
       
     #  
      - name: Terraform Apply  
        run: terrafom apply tfplan
          
